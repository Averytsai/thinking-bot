version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chatbot_postgres_prod
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c timezone=Asia/Taipei
    networks:
      - chatbot_network

  redis:
    image: redis:7-alpine
    container_name: chatbot_redis_prod
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
      - chatbot_network

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: chatbot_web_prod
    environment:
      - DATABASE_URL=postgresql://chatbot_user:chatbot_password@postgres:5432/chatbot_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - OPENAI_API_KEY=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
      - LINE_CHANNEL_ACCESS_TOKEN=uHJTVf4fY6hixiqQVhSqiKN7bwcx02Qv9uLRhr7ZmOZM4dtLdy38DdgjbKqYN94p+4y+4pAPQvr9ePbwJXR9J2RJ3NRL2cyL3jj6dhAgPHg9uomCGJ5/rpb6PjxSmrN3WsR8ZdePILD2igUZWRY9QAdB04t89/1O/w1cDnyilFU=
      - LINE_CHANNEL_SECRET=db680d6b5849b879a1c65c596e386594
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - chatbot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: chatbot_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - chatbot_network

volumes:
  postgres_data:
  redis_data:

networks:
  chatbot_network:
    driver: bridge